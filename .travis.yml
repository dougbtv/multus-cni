language: go
# see https://docs.travis-ci.com/user/reference/overview/#Virtualization-environments
# for the detail
# sudo: requried
dist: trusty

go:
  - 1.11.x

env:
  global:
    - MULTUS_GOPATH=${PWD}/gopath
    - secure: "${REGISTRY_SECURE}"
    - secure: NJkYv9mO7RA06U4X0QgLpuJyTz+dt1x/vAkbjS8lRPJfjNuRW+zFAZS/p6fN/NOwOfxiEUN2AkCdzAM2HIxRs6062twYThoHbmtfoMSWEtCySoZOTPTHg8N2fVJT1b6C4KbEYbGKgjjM5jocoyEzqAN1hb24t8HYntI0gx0JuYg6cVlPa+z5/7wPNkmhnPLMEQjsKdbDWjc9Ol514KlE1jzOqu4GRIp94l6ah/V8OlNdUptDUa/N6Xtz3ewTtAzVrVpdGCSVAWQ3scXx3XCf0kdZmmNgCi1jYgdIkYoXMrmbBCWW5G5iEoOyiC1o20IQ7qXaw0Y/WR4K8iOpspn7xo9NFk5n7vzEewBUHkB/DPgvZo1w2XxS0qThk6qIEAwOAAAKw2zF5jLsHDKkxcu/7a2oQECwKVjkPmcZWMlEAcdJcQa4a6Tbm2hVV1w210uSxFYojPyM7I2hct/0vBtJwEQ0l0BuhYYzLVQ9G8lJhWO1Mp274De42ttCv2sy9kNotMzsfJXfQL0e0CnWN53FOUzZw7j3nT+CRiVYCOFNGkIhjP2USQRplz9Q6u85hAnxyTrqRVKb6qLetV47Zz16+AylQ8NoO5mJBf+HBTMV7pJeMcNSRyVeQ8oEXLbk2+8qwYBTJaSCsH3Le9vhlrYhUD7TnOkjm4YTdDX1yl0qIrA=
    - secure: gA/Bux0ssgZ5ROjLqAgjZXhagPC7CJbwgRn9Hj9AdpgBASv0gCfttqQhIIw7dfNZ74dpdBSK9nJpLRZL4M+/aTtF6sPZgh5OvDA6rZLlB3O+zNsyEOgnE+1IhIGOD6zOHn+VAxpA28F2rp9BFuLT/O9mDwhs/T3afZH466FSteRS8xfF6gxJa+tCTxHKnZ0N5S0VaxlU5PxQs6vKnE4W9LTSXoEXMFBPLGbdRFv4h1VCN/pZnUgy7iVrRDyvPNPx/9Rb/XtxJ3xu1+YPKkVOdtaf+y5A/RJAo4nPF3QCSbpEvIWNUxSuETel4tPBFZu1/u1doc9otgLxfR8aA4IGLPxmoh0TnRhpV6LdLcEwFKZtISwXrSepNxnXT5QCumnluhoO2swJOYC4NxjNMV0F1h9Gge4fpTWWlkhpw1uAYrLeQKqO5sgcxNVVZTu4Agd3ZrX5lwDSLpVc9UHZ2+sufE05hhuag+QnuPOOUcRavyPHu5LO/YGzoKVXlcauiTxeXSaD2sKYczox0aFKXPVJAiZMIMMWYCnl3kjPqdcS6yzWvqXlTyh/des0NPbfSnsYj3soTqzSbhwsoIvbbSZ5eEY8P4BFUPXDu+tAVxze4I2NGjbOu3/izQEKo9SAKePzsuPNGbg2iXMUiRjTkti2owJxuDJZqRou6fUaDU7RDGE=

before_install:
  - sudo apt-get update -qq
  - go get github.com/mattn/goveralls

install:
  - go get -u golang.org/x/lint/golint

# before_script:
#   # Make gopath... to run golint/go fmt/go vet
#   - |-
#     if [ ! -h gopath/src/github.com/intel/multus-cni ]; then
#         mkdir -p gopath/src/github.com/intel
#         ln -s ../../../.. gopath/src/github.com/intel/multus-cni || exit 255
#     fi
#   - env GOPATH=${MULTUS_GOPATH} golint gopath/src/github.com/intel/multus-cni/multus/... | grep -v ALL_CAPS | xargs -r false
#   - env GOPATH=${MULTUS_GOPATH} go fmt gopath/src/github.com/intel/multus-cni/...
#   - go tool vet */*.go
# #  - gocyclo -over 15 ./multus

script:
  # - ./build
  # - sudo ./test.sh
  # - |-
  #   GOV_GOPATH=${PWD}/gopath
  #   pushd gopath/src/github.com/intel/multus-cni
  #   env GOPATH=${GOV_GOPATH} ${GOPATH}/bin/goveralls -coverprofile=coverage.out -service=travis-ci
  #   popd
  # - mkdir -p ${TRAVIS_BUILD_DIR}/dist
  # - tar cvfz ${TRAVIS_BUILD_DIR}/dist/multus-cni_amd64.tar.gz --warning=no-file-changed --exclude="dist" --exclude="vendor" .
  - docker build -t nfvpe/multus .

deploy:
  # Release on versioned tag (e.g. v1.0)
  - provider: script
    #skip_cleanup: true
    script: curl -sL https://git.io/goreleaser | bash
    on:
      tags: true
      all_branches: true
      condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
  # Push images to Dockerhub on tag
  - provider: script
    skip_cleanup: true
    script: >
      bash -c '
      docker tag nfvpe/multus nfvpe/multus:$TRAVIS_TAG;
      docker tag nfvpe/multus nfvpe/multus:stable;
      docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"; 
      docker push nfvpe/multus;
      docker push nfvpe/multus:stable;
      docker push nfvpe/multus:$TRAVIS_TAG;
      echo done'
    on:
      tags: true
      all_branches: true
      condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
  # Push images to Dockerhub on merge to master
  - provider: script
    on:
      branch: kural-tp
    script: >
      bash -c '
      docker tag nfvpe/multus nfvpe/multus:v3.3-tp;
      docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS";
      docker push nfvpe/multus:v3.3-tp;
      echo done'

after_success:
  # put build tgz to bintray
  - curl -T ${TRAVIS_BUILD_DIR}/dist/multus-cni_amd64.tar.gz -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/content/redhat-nfvpe/multus-cni-crd-snapshots/snapshot/snapshot-${TRAVIS_COMMIT}/multus-cni_amd64-${TRAVIS_COMMIT}.tar.gz
  # publish uploaded file
  - curl -X POST -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/content/redhat-nfvpe/multus-cni-crd-snapshots/snapshot/snapshot-${TRAVIS_COMMIT}/publish
  # put it in bintray download list
  - sleep 20
  - "curl -X PUT -H 'Accept: application/json' -H 'Content-type: application/json' -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/file_metadata/redhat-nfvpe/multus-cni-crd-snapshots/multus-cni_amd64-${TRAVIS_COMMIT}.tar.gz -d '{\"list_in_downloads\":true}'"
